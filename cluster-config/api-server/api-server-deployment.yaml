apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: api-server
  name: api-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: api-server
    spec:
      containers:
      - args:
        - api/run
        - -Dcom.sun.management.jmxremote.rmi.port=9010
        - -Dcom.sun.management.jmxremote=true
        - -Dcom.sun.management.jmxremote.port=9010
        - -Dcom.sun.management.jmxremote.ssl=false
        - -Dcom.sun.management.jmxremote.authenticate=false
        - -Dcom.sun.management.jmxremote.local.only=false
        - -Djava.rmi.server.hostname=localhost
        command:
        - ./sbt
        env:
        - name: AIRFLOW_DAG_CONCURRENCY
          value: "4"
        - name: AIRFLOW_POSTGRES_DB
          value: airflow
        - name: AUTH0_CLIENT_ID
          value: yzFnu34TqM18VwO1ugAos3n07SXcaQzS
        - name: AUTH0_CLIENT_SECRET
          value: hKj5ltrQ_0xDUlYTruSwxVW9OOpOIR9F7WUT3wkM-hOiIsrXi_TTtSJdiWCFTui8
        - name: AUTH0_DOMAIN
          value: amigocloud-conida.auth0.com
        - name: AUTH0_MANAGEMENT_CLIENT_ID
          value: PLACEHOLDER
        - name: AUTH0_MANAGEMENT_SECRET
          value: PLACEHOLDER
        - name: AWS_DEFAULT_REGION
          value: us-east-1
        - name: AWS_PROFILE
          value: raster-foundry
        - name: BATCH_INGEST_JOB_NAME
          value: PLACEHOLDER
        - name: BATCH_INGEST_JOB_QUEUE
          value: PLACEHOLDER
        - name: COURSIER_CACHE
          value: /root/.coursier
        - name: DATA_BUCKET
          value: PLACEHOLDER
        - name: ENVIRONMENT
          value: development
        - name: INGEST_STATUS_BUCKET
          value: PLACEHOLDER
        - name: POSTGRES_DB
          value: rasterfoundry
        - name: POSTGRES_PASSWORD
          value: rasterfoundry
        - name: POSTGRES_USER
          value: rasterfoundry
        - name: RF_LOG_LEVEL
          value: INFO
        - name: ROLLBAR_CLIENT_TOKEN
          value: PLACEHOLDER
        - name: ROLLBAR_SERVER_TOKEN
          value: PLACEHOLDER
        - name: THUMBNAIL_BUCKET
          value: PLACEHOLDER
        - name: TILE_SERVER_BUCKET
          value: PLACEHOLDER
        - name: TILE_SERVER_LOCATION
          value: http://localhost:8080
        image: openjdk:8-jre
        name: api-server
        ports:
        - containerPort: 9000
        - containerPort: 9010
        resources: {}
        volumeMounts:
        - mountPath: /opt/raster-foundry/app-backend/
          name: api-server-claim0
        - mountPath: /opt/raster-foundry/scratch/
          name: api-server-claim1
        - mountPath: /root/.coursier
          name: api-server-claim2
        - mountPath: /root/.sbt
          name: api-server-claim3
        - mountPath: /root/.bintray
          name: api-server-claim4
        - mountPath: /root/.aws
          name: api-server-claim5
          readOnly: true
        - mountPath: /root/.ivy2
          name: api-server-claim6
        workingDir: /opt/raster-foundry/app-backend/
      restartPolicy: Always
      volumes:
      - name: api-server-claim0
        persistentVolumeClaim:
          claimName: api-server-claim0
      - name: api-server-claim1
        persistentVolumeClaim:
          claimName: api-server-claim1
      - name: api-server-claim2
        persistentVolumeClaim:
          claimName: api-server-claim2
      - name: api-server-claim3
        persistentVolumeClaim:
          claimName: api-server-claim3
      - name: api-server-claim4
        persistentVolumeClaim:
          claimName: api-server-claim4
      - name: api-server-claim5
        persistentVolumeClaim:
          claimName: api-server-claim5
          readOnly: true
      - name: api-server-claim6
        persistentVolumeClaim:
          claimName: api-server-claim6
status: {}
